name: "Release Tag"

on:
  workflow_run:
    workflows: [ "Github Release" ]
    types:
      - completed

jobs:
  deploy:
    needs: github-build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test trigger
        run:
          echo "tests"

#      - name: Set up JDK 17 to publish to Maven Central Repository
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#          cache: maven
#          server-id: 'ossrh'
#          server-username: MAVEN_USERNAME
#          server-password: MAVEN_PASSWORD
#
#      - name: Configure Git User
#        run: |
#          git config user.email "actions@github.com"
#          git config user.name "GitHub Actions"
#          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
#
#      - name: Import GPG Key
#        uses: crazy-max/ghaction-import-gpg@v5.0.0
#        with:
#          gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
#
#      - name: Get Version to Release
#        run: echo "release_version=$(mvn org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.version -q -DforceStdout)">>"$GITHUB_ENV"
#
#      - name: Release With Maven
#        run: |
#          mvn -s settings.xml -Possrh clean package verify source:jar javadoc:jar gpg:sign --batch-mode -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ env.release_version }} deploy
#
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#          AUTO_RELEASE_AFTER_CLOSE: ${{ env.auto_release }}
#          CORREIOS_API_TOKEN: ${{ secrets.CORREIOS_API_TOKEN }}
#          CORREIOS_CARTAO_POSTAGEM: ${{ secrets.CORREIOS_CARTAO_POSTAGEM }}
#          CORREIOS_USER_ID: ${{ secrets.CORREIOS_USER_ID }}
#
#      - name: Artifact Name
#        shell: bash
#        run: |
#          ls -al ./target/
#          echo "artifact_name=$(mvn org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.build.finalName -q -DforceStdout)" >> "$GITHUB_ENV"
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ env.artifact_name }}-${{ env.sha_short }}
#          path: ./target/${{ env.artifact_name }}*.jar
#
#      - name: Workflow Release Notes
#        uses: peter-evans/repository-dispatch@v2
#        if: ${{ github.event.inputs.releaseVersion }} != "" && ${{ github.event.inputs.developmentVersion }} != ""
#        with:
#          event-type: release-notes
#          client-payload: '{"auto_release": "${{ env.auto_release }}", "artifact": "${{ env.artifact_name }}-${{ env.sha_short }}"}'